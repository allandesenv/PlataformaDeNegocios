# Server Configuration
server:
  port: 8080

# Database (PostgreSQL - Configuração para Docker Compose local no WSL)
spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/authdb # O 'localhost' aqui se refere ao host do Docker, que é o WSL2 Ubuntu.
      # Veremos no docker-compose.yml como o serviço do DB se chama 'db' ou 'postgresql'.
    # A URL será ajustada para jdbc:postgresql://postgresql:5432/authdb dentro do Docker Compose.
    username: user
    password: password
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update # 'update' para dev, 'none' para prod (gerencia o schema automaticamente)
    show-sql: true
    properties:
      hibernate:
        format_sql: true

# Application Specific Properties
app:
  jwt:
    secret: UmSegredoMuitoForteParaJWTQueDeveSerGuardadoEmUmLocalSeguroEAlteradoEmProducao
    expiration-ms: 86400000 # 24 horas em milissegundos

# Google OAuth2 (Será configurado mais tarde, com Client ID e Client Secret reais do Google)
# spring:
#   security:
#     oauth2:
#       client:
#         registration:
#           google:
#             client-id: SEU_CLIENT_ID_GOOGLE
#             client-secret: SEU_CLIENT_SECRET_GOOGLE
#             redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
#             scope: openid,profile,email

# Logging Configuration
logging:
  level:
    com.suaempresa.auth: INFO
    org.springframework.security: DEBUG # Útil para depurar problemas de segurança